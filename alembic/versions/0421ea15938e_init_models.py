"""init models

Revision ID: 0421ea15938e
Revises: 
Create Date: 2024-12-17 21:10:19.526894

"""

from typing import Sequence
from typing import Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0421ea15938e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categorias",
        sa.Column("id_categoria", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("nombre", sa.String(length=100), nullable=False),
        sa.Column("descripcion", sa.Text(), nullable=True),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id_categoria"),
        sa.UniqueConstraint("nombre"),
    )
    op.create_table(
        "clientes",
        sa.Column("id_cliente", sa.Integer(), nullable=False),
        sa.Column("nombre", sa.String(length=200), nullable=False),
        sa.Column("dni", sa.String(length=20), nullable=True),
        sa.Column("telefono", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("limite_credito", sa.Numeric(precision=12, scale=2), nullable=True),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id_cliente"),
        sa.UniqueConstraint("dni"),
    )
    op.create_table(
        "lista_precios",
        sa.Column("id_lista", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("nombre", sa.String(length=100), nullable=False),
        sa.Column("descripcion", sa.Text(), nullable=True),
        sa.Column("fecha_inicio", sa.DateTime(), nullable=True),
        sa.Column("fecha_fin", sa.DateTime(), nullable=True),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id_lista"),
    )
    op.create_table(
        "modulos",
        sa.Column("id_modulo", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("nombre", sa.String(length=50), nullable=False),
        sa.Column("descripcion", sa.String(length=255), nullable=True),
        sa.Column("icono", sa.String(length=50), nullable=True),
        sa.Column("ruta", sa.String(length=100), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id_modulo"),
        sa.UniqueConstraint("nombre"),
    )
    op.create_table(
        "proveedores",
        sa.Column("id_proveedor", sa.Integer(), nullable=False),
        sa.Column("nombre", sa.String(length=200), nullable=False),
        sa.Column("dni", sa.String(length=20), nullable=True),
        sa.Column("telefono", sa.String(length=50), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("es_frecuente", sa.Boolean(), nullable=True),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id_proveedor"),
        sa.UniqueConstraint("dni"),
    )
    op.create_table(
        "roles",
        sa.Column("id_rol", sa.Integer(), nullable=False),
        sa.Column("nombre", sa.String(length=50), nullable=False),
        sa.Column("descripcion", sa.Text(), nullable=True),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id_rol"),
        sa.UniqueConstraint("nombre"),
    )
    op.create_table(
        "unidades",
        sa.Column("id_unidad", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("nombre", sa.String(length=200), nullable=False),
        sa.Column("abreviatura", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("id_unidad"),
    )
    op.create_table(
        "productos",
        sa.Column("id_producto", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("nombre", sa.String(length=200), nullable=False),
        sa.Column("descripcion", sa.Text(), nullable=True),
        sa.Column("id_categoria", sa.Integer(), nullable=True),
        sa.Column("id_unidad", sa.Integer(), nullable=True),
        sa.Column("stock_actual", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("stock_minimo", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("precio_costo", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("precio_venta", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_categoria"],
            ["categorias.id_categoria"],
        ),
        sa.ForeignKeyConstraint(
            ["id_unidad"],
            ["unidades.id_unidad"],
        ),
        sa.PrimaryKeyConstraint("id_producto"),
    )
    op.create_table(
        "usuarios",
        sa.Column("id_usuario", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("nombre", sa.String(length=100), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("id_rol", sa.Integer(), nullable=True),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("ultimo_acceso", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_rol"],
            ["roles.id_rol"],
        ),
        sa.PrimaryKeyConstraint("id_usuario"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "caja_diaria",
        sa.Column("id_caja", sa.Integer(), nullable=False),
        sa.Column("fecha", sa.DateTime(), nullable=False),
        sa.Column("hora_apertura", sa.DateTime(), nullable=False),
        sa.Column("hora_cierre", sa.DateTime(), nullable=True),
        sa.Column("monto_inicial", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("total_ventas_efectivo", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("total_ventas_tarjeta", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("total_ventas_transferencia", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("total_pagos", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("monto_final_sistema", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("monto_final_real", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("diferencia", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("estado", sa.Enum("ABIERTO", "CERRADO", name="estadocaja"), nullable=True),
        sa.Column("id_usuario_apertura", sa.Integer(), nullable=False),
        sa.Column("id_usuario_cierre", sa.Integer(), nullable=True),
        sa.Column("observaciones", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_usuario_apertura"],
            ["usuarios.id_usuario"],
        ),
        sa.ForeignKeyConstraint(
            ["id_usuario_cierre"],
            ["usuarios.id_usuario"],
        ),
        sa.PrimaryKeyConstraint("id_caja"),
    )
    op.create_table(
        "codigo_barras",
        sa.Column("id_codigo_barras", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_producto", sa.Integer(), nullable=False),
        sa.Column("codigo", sa.String(length=100), nullable=False),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_producto"],
            ["productos.id_producto"],
        ),
        sa.PrimaryKeyConstraint("id_codigo_barras"),
        sa.UniqueConstraint("codigo"),
    )
    op.create_table(
        "egresos",
        sa.Column("id_egreso", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("fecha", sa.DateTime(), nullable=False),
        sa.Column("monto", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("tipo_egreso", sa.Enum("COMPRA", "SERVICIO", "SUELDO", "GEO", name="tipoegreso"), nullable=False),
        sa.Column("estado", sa.Enum("PENDIENTE", "COMPLETADO", "ANULADO", name="estadomovimiento"), nullable=False),
        sa.Column("comprobante", sa.String(length=100), nullable=True),
        sa.Column("id_usuario", sa.Integer(), nullable=False),
        sa.Column("observaciones", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_usuario"],
            ["usuarios.id_usuario"],
        ),
        sa.PrimaryKeyConstraint("id_egreso"),
    )
    op.create_table(
        "imagenes",
        sa.Column("id_imagen", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_producto", sa.Integer(), nullable=True),
        sa.Column("nombre", sa.String(length=100), nullable=True),
        sa.Column("tipo", sa.String(length=50), nullable=True),
        sa.Column("orden", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["id_producto"], ["productos.id_producto"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id_imagen"),
    )
    op.create_table(
        "lista_precios_items",
        sa.Column("id_item", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_lista", sa.Integer(), nullable=False),
        sa.Column("id_producto", sa.Integer(), nullable=False),
        sa.Column("precio", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("activo", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_lista"],
            ["lista_precios.id_lista"],
        ),
        sa.ForeignKeyConstraint(
            ["id_producto"],
            ["productos.id_producto"],
        ),
        sa.PrimaryKeyConstraint("id_item"),
    )
    op.create_table(
        "usuarios_modulos",
        sa.Column("id_usuario", sa.Integer(), nullable=False),
        sa.Column("id_modulo", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_modulo"],
            ["modulos.id_modulo"],
        ),
        sa.ForeignKeyConstraint(
            ["id_usuario"],
            ["usuarios.id_usuario"],
        ),
        sa.PrimaryKeyConstraint("id_usuario", "id_modulo"),
    )
    op.create_table(
        "egresos_compras",
        sa.Column("id_egreso_compra", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_proveedor", sa.Integer(), nullable=False),
        sa.Column("id_egreso", sa.Integer(), nullable=False),
        sa.Column("numero_factura", sa.String(length=50), nullable=False),
        sa.Column("subtotal", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("iva_total", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_egreso"],
            ["egresos.id_egreso"],
        ),
        sa.ForeignKeyConstraint(
            ["id_proveedor"],
            ["proveedores.id_proveedor"],
        ),
        sa.PrimaryKeyConstraint("id_egreso_compra"),
        sa.UniqueConstraint("numero_factura"),
    )
    op.create_table(
        "egresos_gastos",
        sa.Column("id_egreso_gasto", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_egreso", sa.Integer(), nullable=False),
        sa.Column("concepto", sa.String(length=200), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_egreso"],
            ["egresos.id_egreso"],
        ),
        sa.PrimaryKeyConstraint("id_egreso_gasto"),
    )
    op.create_table(
        "egresos_servicios",
        sa.Column("id_egreso_servicio", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_egreso", sa.Integer(), nullable=False),
        sa.Column("tipo_servicio", sa.String(length=50), nullable=False),
        sa.Column("periodo_inicio", sa.DateTime(), nullable=True),
        sa.Column("periodo_fin", sa.DateTime(), nullable=True),
        sa.Column("numero_referencia", sa.String(length=100), nullable=True),
        sa.Column("concepto", sa.String(length=200), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_egreso"],
            ["egresos.id_egreso"],
        ),
        sa.PrimaryKeyConstraint("id_egreso_servicio"),
    )
    op.create_table(
        "ventas",
        sa.Column("id_venta", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_cliente", sa.Integer(), nullable=True),
        sa.Column("fecha", sa.DateTime(), nullable=False),
        sa.Column("subtotal", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("iva_total", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("descuento", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("total", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("forma_pago", sa.Enum("EFECTIVO", "TARJETA", "TRANSFERENCIA", "CREDITO", name="formapago"), nullable=False),
        sa.Column("id_usuario", sa.Integer(), nullable=True),
        sa.Column("id_caja", sa.Integer(), nullable=True),
        sa.Column("observaciones", sa.Text(), nullable=True),
        sa.Column("estado", sa.Enum("PENDIENTE", "COMPLETADO", "ANULADO", name="estadomovimiento"), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_caja"],
            ["caja_diaria.id_caja"],
        ),
        sa.ForeignKeyConstraint(
            ["id_cliente"],
            ["clientes.id_cliente"],
        ),
        sa.ForeignKeyConstraint(
            ["id_usuario"],
            ["usuarios.id_usuario"],
        ),
        sa.PrimaryKeyConstraint("id_venta"),
    )
    op.create_table(
        "egresos_compras_items",
        sa.Column("id_item", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_egreso_compra", sa.Integer(), nullable=False),
        sa.Column("id_producto", sa.Integer(), nullable=False),
        sa.Column("cantidad", sa.Numeric(precision=10, scale=3), nullable=False),
        sa.Column("precio_unitario", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("iva", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("subtotal", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("total", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_egreso_compra"],
            ["egresos_compras.id_egreso_compra"],
        ),
        sa.ForeignKeyConstraint(
            ["id_producto"],
            ["productos.id_producto"],
        ),
        sa.PrimaryKeyConstraint("id_item"),
    )
    op.create_table(
        "items_venta",
        sa.Column("id_item", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id_venta", sa.Integer(), nullable=False),
        sa.Column("id_producto", sa.Integer(), nullable=False),
        sa.Column("cantidad", sa.Numeric(precision=10, scale=3), nullable=False),
        sa.Column("precio_unitario", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("descuento", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("iva", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("subtotal", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("total", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_producto"],
            ["productos.id_producto"],
        ),
        sa.ForeignKeyConstraint(
            ["id_venta"],
            ["ventas.id_venta"],
        ),
        sa.PrimaryKeyConstraint("id_item"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("items_venta")
    op.drop_table("egresos_compras_items")
    op.drop_table("ventas")
    op.drop_table("egresos_servicios")
    op.drop_table("egresos_gastos")
    op.drop_table("egresos_compras")
    op.drop_table("usuarios_modulos")
    op.drop_table("lista_precios_items")
    op.drop_table("imagenes")
    op.drop_table("egresos")
    op.drop_table("codigo_barras")
    op.drop_table("caja_diaria")
    op.drop_table("usuarios")
    op.drop_table("productos")
    op.drop_table("unidades")
    op.drop_table("roles")
    op.drop_table("proveedores")
    op.drop_table("modulos")
    op.drop_table("lista_precios")
    op.drop_table("clientes")
    op.drop_table("categorias")
    # ### end Alembic commands ###
